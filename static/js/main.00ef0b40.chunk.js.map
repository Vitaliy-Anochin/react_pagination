{"version":3,"sources":["utils.ts","components/Pagination/Pagination.tsx","App.tsx","index.tsx"],"names":["getNumbers","from","to","numbers","n","push","Pagination","items","itemsPerPage","currentPage","onChangePage","lastPages","Math","ceil","pages","className","classNames","disabled","href","onClick","map","page","active","App","useState","setPage","setItemsPerPage","pageStart","itemsLength","length","pageEnd","showItems","slice","id","value","onChange","event","target","htmlFor","item","ReactDOM","render","document","getElementById"],"mappings":"2MAAO,SAASA,EAAWC,EAAcC,GAGvC,IAFA,IAAMC,EAAU,GAEPC,EAAIH,EAAMG,GAAKF,EAAIE,GAAK,EAC/BD,EAAQE,KAAKD,GAGf,OAAOD,E,WCIIG,EAA8B,SAAC,GAKrC,IAJLC,EAII,EAJJA,MACAC,EAGI,EAHJA,aACAC,EAEI,EAFJA,YACAC,EACI,EADJA,aAEMC,EAAYC,KAAKC,KAAKN,EAAQC,GAC9BM,EAAQd,EAAW,EAAGY,KAAKC,KAAKF,IAEtC,OACE,mCACE,qBAAII,UAAU,aAAd,UACE,oBAAIA,UAAWC,IACb,YACA,CACEC,SAA0B,IAAhBR,IAHd,SAOE,mBACE,UAAQ,WACRM,UAAU,YACVG,KAAK,QACL,gBAAc,OACdC,QAAS,WACa,IAAhBV,GACFC,EAAaD,EAAc,IAPjC,oBAcDK,EAAMM,KAAI,SAAAC,GAAI,OACb,oBAEEN,UAAWC,IACT,YACA,CACEM,OAAQD,IAASZ,IALvB,SASE,mBACE,UAAQ,WACRM,UAAU,YACVG,KAAK,KACLC,QAAS,WACHE,IAASZ,GACXC,EAAaW,IANnB,SAUGA,KAlBEA,MAsBT,oBACEN,UAAWC,IACT,YACA,CACEC,SAAUR,IAAgBE,IAJhC,SAQE,mBACE,UAAQ,WACRI,UAAU,YACVG,KAAK,QACL,gBAAc,QACdC,QAAS,WACHV,IAAgBE,GAClBD,EAAaD,EAAc,IAPjC,0BCtEJF,EAAQP,EAAW,EAAG,IACzBoB,KAAI,SAAAhB,GAAC,qBAAYA,MAEPmB,EAAgB,WAC3B,MAAwBC,mBAAS,GAAjC,mBAAOH,EAAP,KAAaI,EAAb,KACA,EAAwCD,mBAAS,GAAjD,mBAAOhB,EAAP,KAAqBkB,EAArB,KAEMC,GAAaN,EAAO,GAAKb,EACzBoB,EAAcrB,EAAMsB,OACpBC,EAAUF,EAAcP,EAAOb,EACjCoB,EACAP,EAAOb,EAELuB,EAAYxB,EAAMyB,MAAML,EAAWG,GAEzC,OACE,sBAAKf,UAAU,YAAf,UACE,uDAEA,mBAAGA,UAAU,OAAO,UAAQ,OAA5B,wBACWM,EADX,mBAC0BM,EAAY,EADtC,eAEM,MAFN,uBAGMG,EAHN,gBAIM,OAJN,uBAKMvB,EAAMsB,OALZ,kBASA,sBAAKd,UAAU,iBAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,yBACE,UAAQ,kBACRkB,GAAG,kBACHlB,UAAU,eACVmB,MAAO1B,EACP2B,SAAU,SAACC,GACTV,GAAiBU,EAAMC,OAAOH,OAC9BT,EAAQ,IAPZ,UAUE,wBAAQS,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,qBAIJ,uBACEI,QAAQ,kBACRvB,UAAU,qBAFZ,+BAQF,cAAC,EAAD,CACER,MAAOqB,EACPpB,aAAcA,EACdC,YAAaY,EACbX,aAAce,IAEhB,6BACGM,EAAUX,KAAI,SAAAmB,GAAI,OACjB,6BACGA,GADMA,YClEnBC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.00ef0b40.chunk.js","sourcesContent":["export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import React from 'react';\nimport classNames from 'classnames';\nimport { getNumbers } from '../../utils';\n\ntype Props = {\n  items: number,\n  itemsPerPage: number,\n  currentPage: number,\n  onChangePage: (selected: number) => void,\n};\n\nexport const Pagination: React.FC<Props> = ({\n  items,\n  itemsPerPage,\n  currentPage,\n  onChangePage,\n}) => {\n  const lastPages = Math.ceil(items / itemsPerPage);\n  const pages = getNumbers(1, Math.ceil(lastPages));\n\n  return (\n    <>\n      <ul className=\"pagination\">\n        <li className={classNames(\n          'page-item',\n          {\n            disabled: currentPage === 1,\n          },\n        )}\n        >\n          <a\n            data-cy=\"prevLink\"\n            className=\"page-link\"\n            href=\"#prev\"\n            aria-disabled=\"true\"\n            onClick={() => {\n              if (currentPage !== 1) {\n                onChangePage(currentPage - 1);\n              }\n            }}\n          >\n            «\n          </a>\n        </li>\n        {pages.map(page => (\n          <li\n            key={page}\n            className={classNames(\n              'page-item',\n              {\n                active: page === currentPage,\n              },\n            )}\n          >\n            <a\n              data-cy=\"pageLink\"\n              className=\"page-link\"\n              href=\"#1\"\n              onClick={() => {\n                if (page !== currentPage) {\n                  onChangePage(page);\n                }\n              }}\n            >\n              {page}\n            </a>\n          </li>\n        ))}\n        <li\n          className={classNames(\n            'page-item',\n            {\n              disabled: currentPage === lastPages,\n            },\n          )}\n        >\n          <a\n            data-cy=\"nextLink\"\n            className=\"page-link\"\n            href=\"#next\"\n            aria-disabled=\"false\"\n            onClick={() => {\n              if (currentPage !== lastPages) {\n                onChangePage(currentPage + 1);\n              }\n            }}\n          >\n            »\n          </a>\n        </li>\n      </ul>\n    </>\n  );\n};\n","import { useState } from 'react';\nimport './App.css';\nimport { Pagination } from './components/Pagination';\nimport { getNumbers } from './utils';\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst items = getNumbers(1, 42)\n  .map(n => `Item ${n}`);\n\nexport const App: React.FC = () => {\n  const [page, setPage] = useState(1);\n  const [itemsPerPage, setItemsPerPage] = useState(5);\n\n  const pageStart = (page - 1) * itemsPerPage;\n  const itemsLength = items.length;\n  const pageEnd = itemsLength < page * itemsPerPage\n    ? itemsLength\n    : page * itemsPerPage;\n\n  const showItems = items.slice(pageStart, pageEnd);\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${page} (items ${pageStart + 1}\n          ${' - '}\n          ${pageEnd})\n          ${' of '}\n          ${items.length}\n          `}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            value={itemsPerPage}\n            onChange={(event) => {\n              setItemsPerPage(+event.target.value);\n              setPage(1);\n            }}\n          >\n            <option value=\"3\">3</option>\n            <option value=\"5\">5</option>\n            <option value=\"10\">10</option>\n            <option value=\"20\">20</option>\n          </select>\n        </div>\n\n        <label\n          htmlFor=\"perPageSelector\"\n          className=\"col-form-label col\"\n        >\n          items per page\n        </label>\n      </div>\n\n      <Pagination\n        items={itemsLength}\n        itemsPerPage={itemsPerPage}\n        currentPage={page}\n        onChangePage={setPage}\n      />\n      <ul>\n        {showItems.map(item => (\n          <li key={item}>\n            {item}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}